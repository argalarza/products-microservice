name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "üöÄ Iniciando despliegue en EC2..."

          # Establecer el directorio de trabajo correcto
          cd /home/ec2-user/products-ms/products-microservice

          # Clonar o actualizar el c√≥digo
          echo "üì¶ Clonando o actualizando c√≥digo fuente..."
          if [ -d "products-microservice" ]; then
            cd products-microservice && git reset --hard && git pull origin master
          else
            git clone -b master https://github.com/argalarza/products-microservice.git
            cd products-microservice
          fi

          # Crear archivo .env en el servidor
          echo "üìë Creando archivo .env en el servidor..."
          cat <<EOF > .env
          DATABASE_URL=***
          PORT=3001
          EOF

          # Detener y eliminar contenedores existentes
          echo "üõ†Ô∏è Deteniendo y eliminando contenedores existentes..."
          docker-compose -f docker-compose.prod.yml down --remove-orphans

          # Construir y levantar los contenedores
          echo "üõ†Ô∏è Construyendo y levantando los contenedores..."
          docker-compose -f docker-compose.prod.yml up --build -d

          # Verificar que los contenedores est√°n corriendo
          echo "üîç Verificando que el servicio est√° corriendo..."
          docker ps | grep products-ms || { echo "‚ö†Ô∏è ERROR: El contenedor no se inici√≥ correctamente."; exit 1; }

          echo "‚úÖ Despliegue completado exitosamente."
